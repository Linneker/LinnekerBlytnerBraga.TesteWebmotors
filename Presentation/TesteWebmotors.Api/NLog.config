<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="http://www.nlog-project.org/schemas/NLog.xsd NLog.xsd"
      autoReload="true"
      throwExceptions="false"
      internalLogLevel="Off"
      internalLogFile="c:\temp\nlog-internal.log">

	<extensions>
		<add assembly="NLog.Web.AspNetCore" />
	</extensions>

	<targets async="true">

   

		<target xsi:type="AsyncWrapper"
		   name="webmotorsLogFileAsync"
		   overflowAction="Discard"
		   queueLimit="10000"
		   batchSize="200"
		   timeToSleepBetweenBatches="1">
			<target xsi:type="File"
					name="webmotorsLogFile"
					fileName="${basedir}\\logs\\webmotors_log_${shortdate}.log"
					header="(begin) ----------- ${machinename} | ${assembly-version} | ${currentdir} | -----------"
					footer="( end ) ----------- ${longdate} -----------"
					archiveAboveSize="10240000"
					maxArchiveFiles="1"
					archiveNumbering="Rolling"
					keepFileOpen ="True"
					concurrentWrites="True"
					autoFlush="False"
					bufferSize ="32768"
					layout="${longdate} | ${logger} | ${processid} | ${threadid} | ${uppercase:${level}} | ${message} | ${exception:format=tostring} | " />
		</target>

		<target xsi:type="AsyncWrapper"
            name="webmotorsLogFileErrorOnlyAsync"
            overflowAction="Discard"
            queueLimit="10000"
            batchSize="200"
            timeToSleepBetweenBatches="1">
			<target xsi:type="File"
					name="webmotorsLogFileErrorOnly"
					fileName="${basedir}\\logs\\webmotors_log_error_${shortdate}.log"
					header="(begin) ----------- ${machinename} | ${assembly-version} | ${currentdir} | -----------"
					footer="( end ) ----------- ${longdate} -----------"
					archiveAboveSize="10240000"
					maxArchiveFiles="1"
					archiveNumbering="Rolling"
					keepFileOpen ="True"
					concurrentWrites="True"
					autoFlush="False"
					bufferSize ="32768"
					layout="${longdate} | ${logger} | ${processid} | ${threadid} | ${uppercase:${level}} | ${message} | ${exception:format=tostring} |" />
		</target>


		<target xsi:type="AsyncWrapper"
            name="webmotorsLogEfSqlFileAsync"
            overflowAction="Discard"
            queueLimit="10000"
            batchSize="200"
            timeToSleepBetweenBatches="1">
			<target xsi:type="File"
					name="webmotorsLogEfSqlFile"
					fileName="${basedir}\\logs\\webmotors_log_ef_sql_${shortdate}.log"
					header="(begin) ----------- ${machinename} | ${assembly-version} | ${currentdir} | -----------"
					footer="( end ) ----------- ${longdate} -----------"
					archiveAboveSize="10240000"
					maxArchiveFiles="1"
					archiveNumbering="Rolling"
					keepFileOpen ="True"
					concurrentWrites="True"
					autoFlush="False"
					bufferSize ="32768"
					layout="${longdate} | ${uppercase:${level}} | ${message}" />
		</target>

		<target xsi:type="AsyncWrapper"
		   name="webmotorsLogAspNetCore"
		   overflowAction="Discard"
		   queueLimit="10000"
		   batchSize="200"
		   timeToSleepBetweenBatches="1">
			<target xsi:type="File" name="webmotors-web-log" fileName="${basedir}\\logs\webmotors-web-aspnet-${shortdate}.log"
					layout="${longdate}|${event-properties:item=EventId_Id}|${uppercase:${level}}|${logger}|${message} ${exception:format=tostring}|url: ${aspnet-request-url}|action: ${aspnet-mvc-action}"
					header="(begin) ----------- ${machinename} | ${assembly-version} | ${currentdir} | -----------"
					footer="( end ) ----------- ${longdate} -----------"
					archiveAboveSize="10240000"
					maxArchiveFiles="1"
					archiveNumbering="Rolling"
					keepFileOpen ="True"
					concurrentWrites="True"
					autoFlush="False"
					bufferSize ="32768" />
		</target>

		<target xsi:type="ColoredConsole" name="consoleLogger"
				  layout="${date} | ${level:uppercase=true } |${message} ${exception} | ${logger} | ${all-event-properties}" />

		<target xsi:type="Console" name="lifetimeConsole"
				layout="${level:truncate=4}\: ${logger}[0]${newline}      ${message}" />

	</targets>


	<rules>
		<logger name="Microsoft.EntityFrameworkCore.Database.Command" minlevel="Trace" writeTo="webmotorsLogEfSqlFileAsync">
			<filters defaultAction="Log">
				<when condition="contains('${message}','ENTRY')" action="IgnoreFinal" />
				<when condition="contains('${message}','EXIT')" action="IgnoreFinal" />
			</filters>
		</logger>
		<logger name="*" minlevel="Info" writeTo="webmotorsLogFileAsync, webmotorsLogAspNetCore, webmotorsDatabase2LogAsync">
			<filters defaultAction="Log">
				<when condition="contains('${logger}','Microsoft.EntityFrameworkCore')" action="Ignore" />
			</filters>
		</logger>

		<logger name="*" minlevel="Error" writeTo="webmotorsLogFileErrorOnlyAsync" />

		<logger name="Microsoft.Hosting.Lifetime" level="Info" writeTo="lifetimeConsole, webmotorsLogFileAsync" final="true" />
	</rules>
</nlog>